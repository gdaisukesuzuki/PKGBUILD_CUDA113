# Maintainer: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: bartus <arch-user-repoá˜“bartus.33mail.com>
# Contributor: pingplug <pingplug@foxmail.com>
# Contributor: cornholio <vigo.the.unholy.carpathian@gmail.com>

pkgname=(cudf)
_pkgname=cudf
pkgver=0.19.2
pkgrel=1
pkgdesc="RAPIDS Memory Manager"
arch=('x86_64')
url="https://rapids.ai/"
license=('custom')
depends=('arrow-cuda>=1.0.0' 'nccl' 'cuda' 'cmake' 'boost-libs'  'protobuf' )
# depends=('arrow-cuda>=1.0.0' 'nccl' 'cuda' 'cmake' 'rmm' 'dlpack' 'boost-libs'  'protobuf' )
# depends=('arrow-cuda>=1.0.0' 'nccl' 'cuda' 'cuda-tools' 'cuda-static' 'cmake' 'python-rmm' 'dlpack' 'boost-libs'  'protobuf' )
# depends=('arrow-cuda<1.0.0' 'python-pyarrow-cuda' 'gcc9' 'cuda' 'cmake' 'rapids-rmm' 'dlpack' 'boost-libs' 'python-dask'  'python-distributed' 'protobuf' 'python-versioneer')
# depends=('arrow-cudf<0.16.0' 'gcc8' 'cuda' 'cmake' 'rapids-rmm' 'dlpack' 'boost-libs' 'python-dask'  'python-distributed' 'protobuf')
# makedepends=('python-cmake_setuptools' 'protobuf-static')
# depends=('arrow-cudf<0.16.0' 'gcc8' 'cuda' 'cmake' 'rapids-rmm' 'dlpack' 'boost-libs')
# source=("${_pkgname}::git+https://github.com/rapidsai/cudf.git"
source=("${_pkgname}::git+https://github.com/rapidsai/cudf.git#tag=v0.19.0" "cu.patch"
"build.sh.patch"
)
#  "orc.hpp.patch"
#  "remove_keys.cu.patch"
#  "from.arrow.cu.patch"
#  "cudf_setup.py.patch" "gather.cu.patch" "ipc.cpp.patch" "reader_impl.cu.patch")
#  "cudf_setup.py.patch" "nvst_CMakeLists.txt.patch")
#  "from_arrow.cpp.patch"

# sha256sums=('SKIP' 'SKIP')
# sha256sums=('SKIP')
sha256sums=('SKIP' 'SKIP' 'SKIP')


prepare() {
  cd "${srcdir}"
  patch -p0 < cu.patch
  patch -p0 < build.sh.patch
#   patch -p0 < nvst_CMakeLists.txt.patch
#   patch -p0 < gather.cu.patch 
#   patch -p0 < orc.hpp.patch 
#  patch -p0 < cpp.patch
#  patch -p0 < cudf_setup.py.patch
#  patch -p0 < from_arrow.cpp.patch
#   patch -p0 < reader_impl.cu.patch
#   patch -p0 <  from.arrow.cu.patch
#    patch -p0 < ipc.cpp.patch
   export CC=/usr/bin/gcc-10
   export CXX=/usr/bin/g++-10
}

build() {
  cd "${srcdir}/cudf"
  # ./build.sh clean
#  ./build.sh --disable_nvtx -v -n libcudf cudf dask_cudf
  ./build.sh -v -n libcudf

}

package_cudf() {
  cd "${srcdir}"/cudf/cpp/build

  # make DESTDIR="${pkgdir}" install_cudf
  cmake --build . -j$(nproc) --target install DESTDIR="${pkgdir}/usr"

  install -Dm644 ${srcdir}/cudf/LICENSE ${pkgdir}/usr/share/licenses/cudf/LICENSE

}


# vim:set ts=2 sw=2 et:
