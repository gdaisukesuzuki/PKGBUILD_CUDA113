# Maintainer: Leo Mao <leomaoyw at gmail dot com>
pkgname=python-cupy
_pkgname=cupy
pkgver=9.0.0
_cubver=1.12.0
pkgrel=3
pkgdesc="NumPy-like API accelerated with CUDA"
_github="cupy/cupy"
url="https://cupy.dev"
arch=('x86_64')
license=('MIT')
depends=('cuda' 'cudnn' 'nccl' 'python-numpy' 'python-fastrlock')
makedepends=('python' 'python-setuptools' 'cython')
optdepends=('libcutensor' 'cusparselt' 'python-cugraph')
source=("https://github.com/cupy/cupy/archive/v$pkgver.tar.gz"
	"git+https://github.com/NVIDIA/jitify.git"
	"https://github.com/NVIDIA/cub/archive/refs/tags/$_cubver.tar.gz"
        "CubCudaConfig.cmake.patch"
        "cupy_cugraph.h.patch"
        )

md5sums=('SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP')

prepare() {
  patch -p0 < CubCudaConfig.cmake.patch
  patch -p0 < cupy_cugraph.h.patch
  cd "$srcdir/$_pkgname-$pkgver"
  mkdir -p cupy/core/include/cupy
  mkdir -p cupy/core/include/cupy/cub
  mkdir -p cupy/core/include/cupy/jitify
  ln -srf "$srcdir/cub-$_cubver" cupy/_core/include/cupy/cub
  ln -fs "$srcdir/jitify/jitify.hpp" cupy/_core/include/cupy/jitify/jitify.hpp
  #ln -srf "$srcdir/cub-$_cubver" cupy/_core/include/cupy/cub
  # export CC=/opt/cuda/bin/gcc
  # export CXX=/opt/cuda/bin/g++
  # We can use c++14 if the cuda version is greater than 11.
  # See https://github.com/cupy/cupy/issues/3346 for more details.
  cuda_ver=$(pacman -Q cuda | awk '{print $2}')
  if [[ $(vercmp $cuda_ver 11) -ge 0 ]]; then
    sed 's|c++11|c++14|g' -i cupy_setup_build.py
  fi
  export CC=/usr/bin/gcc
  export CXX=//usr/bin/g++
#   export CUPY_NVCC_GENERATE_CODE="arch=compute_86,code=sm_86" 
   export CUPY_NVCC_GENERATE_CODE=current
}

build() {
  cd "$srcdir/$_pkgname-$pkgver"
CFLAGS="-march=rocketlake -mtune=native -DSPDLOG_FMT_EXTERNAL -O3 -pipe -fno-plt -fexceptions \
        -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS \
        -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection -I/usr/include/cugraph " \
CXXFLAGS="-march=rocketlake -mtune=native -DSPDLOG_FMT_EXTERNAL -O3 -pipe -fno-plt -fexceptions \
        -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS \
        -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection -I/usr/include/cugraph " \
  python setup.py build
}

package() {
  cd "$srcdir/$_pkgname-$pkgver"
  python setup.py install --skip-build --prefix=/usr --root="$pkgdir" --optimize=1
  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}
